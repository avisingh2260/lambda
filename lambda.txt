import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

import java.util.List;

public class DB2ToMongoDBTransfer {

    private JdbcTemplate jdbcTemplate;
    private MongoClient mongoClient;
    private MongoDatabase mongoDatabase;
    private MongoCollection<Document> mongoCollection;

    public DB2ToMongoDBTransfer(JdbcTemplate jdbcTemplate, MongoClient mongoClient, String mongoDatabaseName, String mongoCollectionName) {
        this.jdbcTemplate = jdbcTemplate;
        this.mongoClient = mongoClient;
        this.mongoDatabase = mongoClient.getDatabase(mongoDatabaseName);
        this.mongoCollection = mongoDatabase.getCollection(mongoCollectionName);
    }

    public void transfer() {
        List<Data> dataList = jdbcTemplate.query("SELECT * FROM data_table", new DataMapper());
        for (Data data : dataList) {
            mongoCollection.insertOne(convertToDocument(data));
        }
    }

    private Document convertToDocument(Data data) {
        Document document = new Document();
        document.append("id", data.getId());
        document.append("name", data.getName());
        document.append("value", data.getValue());
        return document;
    }

    private static class Data {
        private int id;
        private String name;
        private String value;

        public Data(int id, String name, String value) {
            this.id = id;
            this.name = name;
            this.value = value;
        }

        public int getId() {
            return id;
        }

        public String getName() {
            return name;
        }

        public String getValue() {
            return value;
        }
    }

    private static class DataMapper implements RowMapper<Data> {
        public Data mapRow(ResultSet resultSet, int rowNum) throws SQLException {
            int id = resultSet.getInt("id");
            String name = resultSet.getString("name");
            String value = resultSet.getString("value");
            return new Data(id, name, value);
        }
    }
}
